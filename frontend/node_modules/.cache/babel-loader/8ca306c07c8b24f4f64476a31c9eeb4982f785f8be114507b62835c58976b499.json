{"ast":null,"code":"import L from 'leaflet';\n\n// Custom SVG icons for different device types\nconst DeviceIcons = {\n  // CCTV Camera Icon\n  CCTV: (status = 'online', size = 24) => {\n    const color = status === 'online' ? '#4CAF50' : status === 'low_battery' ? '#FF9800' : '#F44336';\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(6, 8)\">\n          <rect x=\"2\" y=\"2\" width=\"8\" height=\"6\" rx=\"1\" fill=\"white\"/>\n          <circle cx=\"9\" cy=\"4\" r=\"1.5\" fill=\"white\"/>\n          <rect x=\"0\" y=\"4\" width=\"2\" height=\"1\" fill=\"white\"/>\n        </g>\n      </svg>\n    `;\n  },\n  // Traffic Light Icon\n  TrafficSensor: (status = 'online', size = 24) => {\n    const color = status === 'online' ? '#2196F3' : status === 'low_battery' ? '#FF9800' : '#F44336';\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(8, 6)\">\n          <rect x=\"0\" y=\"0\" width=\"8\" height=\"12\" rx=\"2\" fill=\"white\"/>\n          <circle cx=\"4\" cy=\"3\" r=\"1.5\" fill=\"#FF4444\"/>\n          <circle cx=\"4\" cy=\"6\" r=\"1.5\" fill=\"#FFAA00\"/>\n          <circle cx=\"4\" cy=\"9\" r=\"1.5\" fill=\"#44FF44\"/>\n        </g>\n      </svg>\n    `;\n  },\n  // Waste Bin Icon\n  WasteBinSensor: (status = 'online', size = 24) => {\n    const color = status === 'online' ? '#9C27B0' : status === 'low_battery' ? '#FF9800' : '#F44336';\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(7, 6)\">\n          <rect x=\"2\" y=\"3\" width=\"6\" height=\"8\" rx=\"0.5\" fill=\"white\"/>\n          <rect x=\"0\" y=\"2\" width=\"10\" height=\"1.5\" rx=\"0.5\" fill=\"white\"/>\n          <line x1=\"3.5\" y1=\"0\" x2=\"6.5\" y2=\"0\" stroke=\"white\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\n          <line x1=\"4.5\" y1=\"5\" x2=\"4.5\" y2=\"9\" stroke=\"${color}\" stroke-width=\"1\"/>\n          <line x1=\"5.5\" y1=\"5\" x2=\"5.5\" y2=\"9\" stroke=\"${color}\" stroke-width=\"1\"/>\n        </g>\n      </svg>\n    `;\n  },\n  // Smart Street Light Icon\n  SmartStreetlight: (status = 'online', size = 24) => {\n    const color = status === 'online' ? '#FFC107' : status === 'low_battery' ? '#FF9800' : '#F44336';\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(8, 4)\">\n          <rect x=\"3\" y=\"0\" width=\"2\" height=\"16\" fill=\"white\"/>\n          <circle cx=\"4\" cy=\"3\" r=\"2.5\" fill=\"white\"/>\n          <circle cx=\"4\" cy=\"3\" r=\"1.5\" fill=\"${color}\"/>\n          <g fill=\"white\" opacity=\"0.8\">\n            <path d=\"M1 5 L7 5 L6 7 L2 7 Z\"/>\n            <path d=\"M1.5 7.5 L6.5 7.5 L6 9 L2 9 Z\"/>\n          </g>\n        </g>\n      </svg>\n    `;\n  },\n  // Pollution Sensor Icon\n  PollutionSensor: (status = 'online', size = 24) => {\n    const color = status === 'online' ? '#795548' : status === 'low_battery' ? '#FF9800' : '#F44336';\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(6, 6)\">\n          <rect x=\"2\" y=\"6\" width=\"8\" height=\"6\" rx=\"1\" fill=\"white\"/>\n          <rect x=\"4.5\" y=\"0\" width=\"3\" height=\"6\" fill=\"white\"/>\n          <circle cx=\"6\" cy=\"2\" r=\"1\" fill=\"${color}\"/>\n          <path d=\"M3 9 L9 9\" stroke=\"${color}\" stroke-width=\"0.5\"/>\n          <path d=\"M3 10 L9 10\" stroke=\"${color}\" stroke-width=\"0.5\"/>\n          <path d=\"M3 11 L7 11\" stroke=\"${color}\" stroke-width=\"0.5\"/>\n        </g>\n      </svg>\n    `;\n  },\n  // Water Quality Sensor Icon\n  WaterQualitySensor: (status = 'online', size = 24) => {\n    const color = status === 'online' ? '#00BCD4' : status === 'low_battery' ? '#FF9800' : '#F44336';\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(7, 5)\">\n          <path d=\"M5 3 C5 1 3 0 3 0 S1 1 1 3 C1 4.1 1.9 5 3 5 S5 4.1 5 3 Z\" fill=\"white\"/>\n          <rect x=\"1\" y=\"6\" width=\"8\" height=\"8\" rx=\"1\" fill=\"white\"/>\n          <path d=\"M2 8 Q3 7 4 8 T6 8 T8 8\" stroke=\"${color}\" stroke-width=\"1\" fill=\"none\"/>\n          <path d=\"M2 10 Q3 9 4 10 T6 10 T8 10\" stroke=\"${color}\" stroke-width=\"1\" fill=\"none\"/>\n          <circle cx=\"7\" cy=\"12\" r=\"0.5\" fill=\"${color}\"/>\n        </g>\n      </svg>\n    `;\n  },\n  // Noise Sensor Icon\n  NoiseSensor: (status = 'online', size = 24) => {\n    const color = status === 'online' ? '#E91E63' : status === 'low_battery' ? '#FF9800' : '#F44336';\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(6, 6)\">\n          <rect x=\"2\" y=\"4\" width=\"3\" height=\"8\" rx=\"1.5\" fill=\"white\"/>\n          <rect x=\"0\" y=\"6\" width=\"2\" height=\"4\" rx=\"1\" fill=\"white\"/>\n          <path d=\"M6 5 Q8 7 8 9 Q8 11 6 13\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"/>\n          <path d=\"M8 3 Q11 6 11 9 Q11 12 8 15\" stroke=\"white\" stroke-width=\"1\" fill=\"none\"/>\n        </g>\n      </svg>\n    `;\n  },\n  // Parking Sensor Icon\n  ParkingSensor: (status = 'online', size = 24) => {\n    const color = status === 'online' ? '#3F51B5' : status === 'low_battery' ? '#FF9800' : '#F44336';\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(4, 6)\">\n          <rect x=\"2\" y=\"2\" width=\"12\" height=\"8\" rx=\"2\" fill=\"white\"/>\n          <circle cx=\"5\" cy=\"8\" r=\"1.5\" fill=\"${color}\"/>\n          <circle cx=\"11\" cy=\"8\" r=\"1.5\" fill=\"${color}\"/>\n          <rect x=\"6\" y=\"4\" width=\"4\" height=\"2\" fill=\"${color}\"/>\n          <text x=\"8\" y=\"6\" text-anchor=\"middle\" font-size=\"3\" fill=\"white\" font-weight=\"bold\">P</text>\n        </g>\n      </svg>\n    `;\n  }\n};\n\n// Create custom Leaflet icon for devices\nexport const createCustomDeviceIcon = (type, status = 'online', size = 32) => {\n  const iconSvg = DeviceIcons[type] ? DeviceIcons[type](status, size - 8) : DeviceIcons.CCTV(status, size - 8);\n  return L.divIcon({\n    html: `<div style=\"position: relative; width: ${size}px; height: ${size}px;\">\n      ${iconSvg}\n    </div>`,\n    className: 'custom-device-icon',\n    iconSize: [size, size],\n    iconAnchor: [size / 2, size / 2]\n  });\n};\n\n// Edge Node Icon with enhanced design\nexport const createEdgeNodeIcon = (size = 40) => {\n  return L.divIcon({\n    html: `\n      <div style=\"position: relative; width: ${size}px; height: ${size}px;\">\n        <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 40 40\" fill=\"none\">\n          <defs>\n            <linearGradient id=\"edgeGrad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" style=\"stop-color:#667eea\"/>\n              <stop offset=\"100%\" style=\"stop-color:#764ba2\"/>\n            </linearGradient>\n          </defs>\n          <rect x=\"2\" y=\"2\" width=\"36\" height=\"36\" rx=\"6\" fill=\"url(#edgeGrad)\" stroke=\"white\" stroke-width=\"2\"/>\n          <g transform=\"translate(10, 8)\">\n            <rect x=\"0\" y=\"4\" width=\"20\" height=\"12\" rx=\"2\" fill=\"white\"/>\n            <rect x=\"2\" y=\"6\" width=\"5\" height=\"2\" fill=\"#667eea\"/>\n            <rect x=\"2\" y=\"9\" width=\"8\" height=\"2\" fill=\"#667eea\"/>\n            <rect x=\"2\" y=\"12\" width=\"6\" height=\"2\" fill=\"#667eea\"/>\n            <circle cx=\"15\" cy=\"10\" r=\"3\" fill=\"white\" stroke=\"#667eea\" stroke-width=\"2\"/>\n            <circle cx=\"15\" cy=\"10\" r=\"1\" fill=\"#667eea\"/>\n          </g>\n          <g transform=\"translate(8, 22)\">\n            <rect x=\"0\" y=\"0\" width=\"6\" height=\"6\" rx=\"1\" fill=\"white\" opacity=\"0.8\"/>\n            <rect x=\"8\" y=\"0\" width=\"6\" height=\"6\" rx=\"1\" fill=\"white\" opacity=\"0.8\"/>\n            <rect x=\"16\" y=\"0\" width=\"6\" height=\"6\" rx=\"1\" fill=\"white\" opacity=\"0.8\"/>\n          </g>\n        </svg>\n      </div>\n    `,\n    className: 'edge-node-icon',\n    iconSize: [size, size],\n    iconAnchor: [size / 2, size / 2]\n  });\n};\n\n// Alert Icon with pulsing animation\nexport const createAlertIcon = (severity, size = 32) => {\n  const colors = {\n    high: '#F44336',\n    medium: '#FF9800',\n    low: '#FFC107'\n  };\n  const color = colors[severity] || colors.medium;\n  return L.divIcon({\n    html: `\n      <div style=\"position: relative; width: ${size}px; height: ${size}px;\">\n        <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 32 32\" fill=\"none\">\n          <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"${color}\" stroke=\"white\" stroke-width=\"3\"/>\n          <g transform=\"translate(11, 8)\">\n            <path d=\"M5 0 L9 7 L1 7 Z\" fill=\"white\"/>\n            <circle cx=\"5\" cy=\"10\" r=\"1\" fill=\"white\"/>\n            <rect x=\"4.2\" y=\"3\" width=\"1.6\" height=\"4\" fill=\"${color}\"/>\n          </g>\n        </svg>\n        <style>\n          .alert-pulse-${severity} {\n            animation: alertPulse 2s infinite;\n          }\n          @keyframes alertPulse {\n            0% { transform: scale(1); opacity: 1; }\n            50% { transform: scale(1.15); opacity: 0.7; }\n            100% { transform: scale(1); opacity: 1; }\n          }\n        </style>\n      </div>\n    `,\n    className: `alert-icon alert-pulse-${severity}`,\n    iconSize: [size, size],\n    iconAnchor: [size / 2, size / 2]\n  });\n};\nexport default DeviceIcons;","map":{"version":3,"names":["L","DeviceIcons","CCTV","status","size","color","TrafficSensor","WasteBinSensor","SmartStreetlight","PollutionSensor","WaterQualitySensor","NoiseSensor","ParkingSensor","createCustomDeviceIcon","type","iconSvg","divIcon","html","className","iconSize","iconAnchor","createEdgeNodeIcon","createAlertIcon","severity","colors","high","medium","low"],"sources":["D:/smart_city_communication_hub/frontend/src/components/DeviceIcons.js"],"sourcesContent":["import L from 'leaflet';\r\n\r\n// Custom SVG icons for different device types\r\nconst DeviceIcons = {\r\n  // CCTV Camera Icon\r\n  CCTV: (status = 'online', size = 24) => {\r\n    const color = status === 'online' ? '#4CAF50' : status === 'low_battery' ? '#FF9800' : '#F44336';\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(6, 8)\">\r\n          <rect x=\"2\" y=\"2\" width=\"8\" height=\"6\" rx=\"1\" fill=\"white\"/>\r\n          <circle cx=\"9\" cy=\"4\" r=\"1.5\" fill=\"white\"/>\r\n          <rect x=\"0\" y=\"4\" width=\"2\" height=\"1\" fill=\"white\"/>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Traffic Light Icon\r\n  TrafficSensor: (status = 'online', size = 24) => {\r\n    const color = status === 'online' ? '#2196F3' : status === 'low_battery' ? '#FF9800' : '#F44336';\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(8, 6)\">\r\n          <rect x=\"0\" y=\"0\" width=\"8\" height=\"12\" rx=\"2\" fill=\"white\"/>\r\n          <circle cx=\"4\" cy=\"3\" r=\"1.5\" fill=\"#FF4444\"/>\r\n          <circle cx=\"4\" cy=\"6\" r=\"1.5\" fill=\"#FFAA00\"/>\r\n          <circle cx=\"4\" cy=\"9\" r=\"1.5\" fill=\"#44FF44\"/>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Waste Bin Icon\r\n  WasteBinSensor: (status = 'online', size = 24) => {\r\n    const color = status === 'online' ? '#9C27B0' : status === 'low_battery' ? '#FF9800' : '#F44336';\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(7, 6)\">\r\n          <rect x=\"2\" y=\"3\" width=\"6\" height=\"8\" rx=\"0.5\" fill=\"white\"/>\r\n          <rect x=\"0\" y=\"2\" width=\"10\" height=\"1.5\" rx=\"0.5\" fill=\"white\"/>\r\n          <line x1=\"3.5\" y1=\"0\" x2=\"6.5\" y2=\"0\" stroke=\"white\" stroke-width=\"1.5\" stroke-linecap=\"round\"/>\r\n          <line x1=\"4.5\" y1=\"5\" x2=\"4.5\" y2=\"9\" stroke=\"${color}\" stroke-width=\"1\"/>\r\n          <line x1=\"5.5\" y1=\"5\" x2=\"5.5\" y2=\"9\" stroke=\"${color}\" stroke-width=\"1\"/>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Smart Street Light Icon\r\n  SmartStreetlight: (status = 'online', size = 24) => {\r\n    const color = status === 'online' ? '#FFC107' : status === 'low_battery' ? '#FF9800' : '#F44336';\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(8, 4)\">\r\n          <rect x=\"3\" y=\"0\" width=\"2\" height=\"16\" fill=\"white\"/>\r\n          <circle cx=\"4\" cy=\"3\" r=\"2.5\" fill=\"white\"/>\r\n          <circle cx=\"4\" cy=\"3\" r=\"1.5\" fill=\"${color}\"/>\r\n          <g fill=\"white\" opacity=\"0.8\">\r\n            <path d=\"M1 5 L7 5 L6 7 L2 7 Z\"/>\r\n            <path d=\"M1.5 7.5 L6.5 7.5 L6 9 L2 9 Z\"/>\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Pollution Sensor Icon\r\n  PollutionSensor: (status = 'online', size = 24) => {\r\n    const color = status === 'online' ? '#795548' : status === 'low_battery' ? '#FF9800' : '#F44336';\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(6, 6)\">\r\n          <rect x=\"2\" y=\"6\" width=\"8\" height=\"6\" rx=\"1\" fill=\"white\"/>\r\n          <rect x=\"4.5\" y=\"0\" width=\"3\" height=\"6\" fill=\"white\"/>\r\n          <circle cx=\"6\" cy=\"2\" r=\"1\" fill=\"${color}\"/>\r\n          <path d=\"M3 9 L9 9\" stroke=\"${color}\" stroke-width=\"0.5\"/>\r\n          <path d=\"M3 10 L9 10\" stroke=\"${color}\" stroke-width=\"0.5\"/>\r\n          <path d=\"M3 11 L7 11\" stroke=\"${color}\" stroke-width=\"0.5\"/>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Water Quality Sensor Icon\r\n  WaterQualitySensor: (status = 'online', size = 24) => {\r\n    const color = status === 'online' ? '#00BCD4' : status === 'low_battery' ? '#FF9800' : '#F44336';\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(7, 5)\">\r\n          <path d=\"M5 3 C5 1 3 0 3 0 S1 1 1 3 C1 4.1 1.9 5 3 5 S5 4.1 5 3 Z\" fill=\"white\"/>\r\n          <rect x=\"1\" y=\"6\" width=\"8\" height=\"8\" rx=\"1\" fill=\"white\"/>\r\n          <path d=\"M2 8 Q3 7 4 8 T6 8 T8 8\" stroke=\"${color}\" stroke-width=\"1\" fill=\"none\"/>\r\n          <path d=\"M2 10 Q3 9 4 10 T6 10 T8 10\" stroke=\"${color}\" stroke-width=\"1\" fill=\"none\"/>\r\n          <circle cx=\"7\" cy=\"12\" r=\"0.5\" fill=\"${color}\"/>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Noise Sensor Icon\r\n  NoiseSensor: (status = 'online', size = 24) => {\r\n    const color = status === 'online' ? '#E91E63' : status === 'low_battery' ? '#FF9800' : '#F44336';\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(6, 6)\">\r\n          <rect x=\"2\" y=\"4\" width=\"3\" height=\"8\" rx=\"1.5\" fill=\"white\"/>\r\n          <rect x=\"0\" y=\"6\" width=\"2\" height=\"4\" rx=\"1\" fill=\"white\"/>\r\n          <path d=\"M6 5 Q8 7 8 9 Q8 11 6 13\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"/>\r\n          <path d=\"M8 3 Q11 6 11 9 Q11 12 8 15\" stroke=\"white\" stroke-width=\"1\" fill=\"none\"/>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Parking Sensor Icon\r\n  ParkingSensor: (status = 'online', size = 24) => {\r\n    const color = status === 'online' ? '#3F51B5' : status === 'low_battery' ? '#FF9800' : '#F44336';\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"${color}\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(4, 6)\">\r\n          <rect x=\"2\" y=\"2\" width=\"12\" height=\"8\" rx=\"2\" fill=\"white\"/>\r\n          <circle cx=\"5\" cy=\"8\" r=\"1.5\" fill=\"${color}\"/>\r\n          <circle cx=\"11\" cy=\"8\" r=\"1.5\" fill=\"${color}\"/>\r\n          <rect x=\"6\" y=\"4\" width=\"4\" height=\"2\" fill=\"${color}\"/>\r\n          <text x=\"8\" y=\"6\" text-anchor=\"middle\" font-size=\"3\" fill=\"white\" font-weight=\"bold\">P</text>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  }\r\n};\r\n\r\n// Create custom Leaflet icon for devices\r\nexport const createCustomDeviceIcon = (type, status = 'online', size = 32) => {\r\n  const iconSvg = DeviceIcons[type] ? DeviceIcons[type](status, size - 8) : DeviceIcons.CCTV(status, size - 8);\r\n  \r\n  return L.divIcon({\r\n    html: `<div style=\"position: relative; width: ${size}px; height: ${size}px;\">\r\n      ${iconSvg}\r\n    </div>`,\r\n    className: 'custom-device-icon',\r\n    iconSize: [size, size],\r\n    iconAnchor: [size / 2, size / 2],\r\n  });\r\n};\r\n\r\n// Edge Node Icon with enhanced design\r\nexport const createEdgeNodeIcon = (size = 40) => {\r\n  return L.divIcon({\r\n    html: `\r\n      <div style=\"position: relative; width: ${size}px; height: ${size}px;\">\r\n        <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 40 40\" fill=\"none\">\r\n          <defs>\r\n            <linearGradient id=\"edgeGrad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n              <stop offset=\"0%\" style=\"stop-color:#667eea\"/>\r\n              <stop offset=\"100%\" style=\"stop-color:#764ba2\"/>\r\n            </linearGradient>\r\n          </defs>\r\n          <rect x=\"2\" y=\"2\" width=\"36\" height=\"36\" rx=\"6\" fill=\"url(#edgeGrad)\" stroke=\"white\" stroke-width=\"2\"/>\r\n          <g transform=\"translate(10, 8)\">\r\n            <rect x=\"0\" y=\"4\" width=\"20\" height=\"12\" rx=\"2\" fill=\"white\"/>\r\n            <rect x=\"2\" y=\"6\" width=\"5\" height=\"2\" fill=\"#667eea\"/>\r\n            <rect x=\"2\" y=\"9\" width=\"8\" height=\"2\" fill=\"#667eea\"/>\r\n            <rect x=\"2\" y=\"12\" width=\"6\" height=\"2\" fill=\"#667eea\"/>\r\n            <circle cx=\"15\" cy=\"10\" r=\"3\" fill=\"white\" stroke=\"#667eea\" stroke-width=\"2\"/>\r\n            <circle cx=\"15\" cy=\"10\" r=\"1\" fill=\"#667eea\"/>\r\n          </g>\r\n          <g transform=\"translate(8, 22)\">\r\n            <rect x=\"0\" y=\"0\" width=\"6\" height=\"6\" rx=\"1\" fill=\"white\" opacity=\"0.8\"/>\r\n            <rect x=\"8\" y=\"0\" width=\"6\" height=\"6\" rx=\"1\" fill=\"white\" opacity=\"0.8\"/>\r\n            <rect x=\"16\" y=\"0\" width=\"6\" height=\"6\" rx=\"1\" fill=\"white\" opacity=\"0.8\"/>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    `,\r\n    className: 'edge-node-icon',\r\n    iconSize: [size, size],\r\n    iconAnchor: [size / 2, size / 2],\r\n  });\r\n};\r\n\r\n// Alert Icon with pulsing animation\r\nexport const createAlertIcon = (severity, size = 32) => {\r\n  const colors = {\r\n    high: '#F44336',\r\n    medium: '#FF9800',\r\n    low: '#FFC107'\r\n  };\r\n\r\n  const color = colors[severity] || colors.medium;\r\n\r\n  return L.divIcon({\r\n    html: `\r\n      <div style=\"position: relative; width: ${size}px; height: ${size}px;\">\r\n        <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 32 32\" fill=\"none\">\r\n          <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"${color}\" stroke=\"white\" stroke-width=\"3\"/>\r\n          <g transform=\"translate(11, 8)\">\r\n            <path d=\"M5 0 L9 7 L1 7 Z\" fill=\"white\"/>\r\n            <circle cx=\"5\" cy=\"10\" r=\"1\" fill=\"white\"/>\r\n            <rect x=\"4.2\" y=\"3\" width=\"1.6\" height=\"4\" fill=\"${color}\"/>\r\n          </g>\r\n        </svg>\r\n        <style>\r\n          .alert-pulse-${severity} {\r\n            animation: alertPulse 2s infinite;\r\n          }\r\n          @keyframes alertPulse {\r\n            0% { transform: scale(1); opacity: 1; }\r\n            50% { transform: scale(1.15); opacity: 0.7; }\r\n            100% { transform: scale(1); opacity: 1; }\r\n          }\r\n        </style>\r\n      </div>\r\n    `,\r\n    className: `alert-icon alert-pulse-${severity}`,\r\n    iconSize: [size, size],\r\n    iconAnchor: [size / 2, size / 2],\r\n  });\r\n};\r\n\r\nexport default DeviceIcons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\smart_city_communication_hub\\\\frontend\\\\src\\\\components\\\\CityMap.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport styled from 'styled-components';\nimport { createCustomDeviceIcon, createEdgeNodeIcon, createAlertIcon } from './DeviceIcons';\nimport { MAPBOX_CONFIG } from '../config/mapbox';\n\n// Enhanced legend with device-specific information\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst deviceTypeInfo = {\n  CCTV: {\n    color: '#2C3E50',\n    icon: '📹',\n    name: 'Security Cameras'\n  },\n  TrafficSensor: {\n    color: '#34495E',\n    icon: '🚦',\n    name: 'Traffic Controllers'\n  },\n  WasteBinSensor: {\n    color: '#8E44AD',\n    icon: '🗑️',\n    name: 'Waste Monitors'\n  },\n  SmartStreetlight: {\n    color: '#F39C12',\n    icon: '💡',\n    name: 'Smart Lighting'\n  },\n  PollutionSensor: {\n    color: '#95A5A6',\n    icon: '🌡️',\n    name: 'Air Quality'\n  },\n  WaterQualitySensor: {\n    color: '#3498DB',\n    icon: '💧',\n    name: 'Water Sensors'\n  },\n  NoiseSensor: {\n    color: '#E91E63',\n    icon: '🔊',\n    name: 'Sound Monitors'\n  },\n  ParkingSensor: {\n    color: '#3F51B5',\n    icon: '🅿️',\n    name: 'Parking Spaces'\n  }\n};\n\n// Fix for default markers in React Leaflet\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nconst MapWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  position: relative;\n\n  .leaflet-container {\n    height: 100%;\n    width: 100%;\n    background: #f0f2f5;\n  }\n`;\n_c = MapWrapper;\nconst MapControls = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n_c2 = MapControls;\nconst ControlButton = styled.button`\n  padding: 8px 12px;\n  background: rgba(255, 255, 255, 0.9);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  cursor: pointer;\n  font-size: 12px;\n  font-weight: 500;\n  \n  &:hover {\n    background: rgba(255, 255, 255, 1);\n  }\n`;\n_c3 = ControlButton;\nconst Legend = styled.div`\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  z-index: 1000;\n  background: rgba(255, 255, 255, 0.9);\n  padding: 10px;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  font-size: 12px;\n  min-width: 200px;\n`;\n_c4 = Legend;\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 4px 0;\n  \n  &::before {\n    content: '';\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background: ${props => props.color};\n    margin-right: 8px;\n  }\n`;\n_c5 = LegendItem;\nfunction MapUpdater({\n  devices,\n  edgeNodes,\n  alerts,\n  onDeviceClick\n}) {\n  _s();\n  const map = useMap();\n  const markersRef = useRef([]);\n  useEffect(() => {\n    // Clear existing markers\n    markersRef.current.forEach(marker => {\n      map.removeLayer(marker);\n    });\n    markersRef.current = [];\n\n    // Add device markers with large, distinctive custom icons for each device type\n    devices.forEach(device => {\n      var _deviceTypeInfo$devic;\n      const marker = L.marker([device.location.lat, device.location.lon], {\n        icon: createCustomDeviceIcon(device.type, device.status, 40)\n      });\n      marker.bindPopup(`\n        <div style=\"min-width: 200px;\">\n          <h4 style=\"margin: 0 0 8px 0; color: #333;\">${((_deviceTypeInfo$devic = deviceTypeInfo[device.type]) === null || _deviceTypeInfo$devic === void 0 ? void 0 : _deviceTypeInfo$devic.name) || device.type}</h4>\n          <p style=\"margin: 2px 0;\"><strong>ID:</strong> ${device.id}</p>\n          <p style=\"margin: 2px 0;\"><strong>Status:</strong> \n            <span style=\"color: ${device.status === 'online' ? '#4CAF50' : '#F44336'};\">\n              ${device.status}\n            </span>\n          </p>\n          <p style=\"margin: 2px 0;\"><strong>Network:</strong> ${device.networkType}</p>\n          <p style=\"margin: 2px 0;\"><strong>Battery:</strong> ${device.batteryLevel}%</p>\n          <button onclick=\"window.selectDevice('${device.id}')\" \n                  style=\"\n                    margin-top: 8px; \n                    padding: 4px 8px; \n                    background: #667eea; \n                    color: white; \n                    border: none; \n                    border-radius: 4px; \n                    cursor: pointer;\n                  \">\n            View Details\n          </button>\n        </div>\n      `);\n      marker.on('click', () => onDeviceClick(device.id));\n      marker.addTo(map);\n      markersRef.current.push(marker);\n    });\n\n    // Add edge node markers with enhanced design\n    edgeNodes.forEach(node => {\n      const marker = L.marker([node.location.lat, node.location.lon], {\n        icon: createEdgeNodeIcon(40)\n      });\n      marker.bindPopup(`\n        <div style=\"min-width: 200px;\">\n          <h4 style=\"margin: 0 0 8px 0; color: #333;\">Edge Computing Node</h4>\n          <p style=\"margin: 2px 0;\"><strong>ID:</strong> ${node.id}</p>\n          <p style=\"margin: 2px 0;\"><strong>Name:</strong> ${node.name || 'Unknown'}</p>\n          <p style=\"margin: 2px 0;\"><strong>Status:</strong> \n            <span style=\"color: ${node.status === 'online' ? '#4CAF50' : '#F44336'};\">\n              ${node.status}\n            </span>\n          </p>\n          <p style=\"margin: 2px 0;\"><strong>Connected Devices:</strong> ${node.connectedDevices}</p>\n        </div>\n      `);\n      marker.addTo(map);\n      markersRef.current.push(marker);\n    });\n\n    // Add alert markers with enhanced design\n    alerts.forEach(alert => {\n      if (alert.location) {\n        const marker = L.marker([alert.location.lat, alert.location.lon], {\n          icon: createAlertIcon(alert.severity, 32)\n        });\n        marker.bindPopup(`\n          <div style=\"min-width: 200px;\">\n            <h4 style=\"margin: 0 0 8px 0; color: #F44336;\">🚨 Emergency Alert</h4>\n            <p style=\"margin: 2px 0;\"><strong>Type:</strong> ${alert.type}</p>\n            <p style=\"margin: 2px 0;\"><strong>Severity:</strong> \n              <span style=\"color: ${alert.severity === 'high' ? '#F44336' : '#FF9800'};\">\n                ${alert.severity}\n              </span>\n            </p>\n            <p style=\"margin: 2px 0;\"><strong>Description:</strong> ${alert.description}</p>\n            <p style=\"margin: 2px 0; font-size: 12px; color: #666;\">\n              ${new Date(alert.timestamp).toLocaleString()}\n            </p>\n          </div>\n        `);\n        marker.addTo(map);\n        markersRef.current.push(marker);\n      }\n    });\n    return () => {\n      markersRef.current.forEach(marker => {\n        map.removeLayer(marker);\n      });\n      markersRef.current = [];\n    };\n  }, [devices, edgeNodes, alerts, map, onDeviceClick]);\n  return null;\n}\n_s(MapUpdater, \"j9VJFnGgtxCyRgacboHTHsLik+8=\", false, function () {\n  return [useMap];\n});\n_c6 = MapUpdater;\nfunction CityMap({\n  devices = [],\n  edgeNodes = [],\n  emergencyAlerts = [],\n  onDeviceClick\n}) {\n  _s2();\n  const mapRef = useRef();\n\n  // Chennai city center coordinates\n  const defaultCenter = [13.0827, 80.2707]; // Chennai, Tamil Nadu, India\n  const defaultZoom = 13;\n  useEffect(() => {\n    // Make device click handler globally available for popup buttons\n    window.selectDevice = onDeviceClick;\n    return () => {\n      delete window.selectDevice;\n    };\n  }, [onDeviceClick]);\n  const handleFitBounds = () => {\n    if (mapRef.current) {\n      const allLocations = [...devices.map(d => [d.location.lat, d.location.lon]), ...edgeNodes.map(n => [n.location.lat, n.location.lon])];\n      if (allLocations.length > 0) {\n        mapRef.current.fitBounds(allLocations, {\n          padding: [20, 20]\n        });\n      }\n    }\n  };\n  const handleResetView = () => {\n    if (mapRef.current) {\n      mapRef.current.setView(defaultCenter, defaultZoom);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MapWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: defaultCenter,\n      zoom: defaultZoom,\n      ref: mapRef,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      zoomControl: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapUpdater, {\n        devices: devices,\n        edgeNodes: edgeNodes,\n        alerts: emergencyAlerts,\n        onDeviceClick: onDeviceClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapControls, {\n      children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n        onClick: handleFitBounds,\n        children: \"\\uD83D\\uDCCD Fit All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        onClick: handleResetView,\n        children: \"\\uD83C\\uDFE0 Reset View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 8px 0',\n          fontSize: '14px'\n        },\n        children: \"Device Types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), Object.entries(deviceTypeInfo).map(([type, info]) => /*#__PURE__*/_jsxDEV(LegendItem, {\n        color: info.color,\n        children: [info.icon, \" \", info.name]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(LegendItem, {\n        color: \"#667eea\",\n        children: \"\\uD83C\\uDFE2 Edge Computing Nodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), emergencyAlerts.length > 0 && /*#__PURE__*/_jsxDEV(LegendItem, {\n        color: \"#F44336\",\n        children: [\"\\u26A0\\uFE0F Active Alerts (\", emergencyAlerts.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n}\n_s2(CityMap, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c7 = CityMap;\nexport default CityMap;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"MapWrapper\");\n$RefreshReg$(_c2, \"MapControls\");\n$RefreshReg$(_c3, \"ControlButton\");\n$RefreshReg$(_c4, \"Legend\");\n$RefreshReg$(_c5, \"LegendItem\");\n$RefreshReg$(_c6, \"MapUpdater\");\n$RefreshReg$(_c7, \"CityMap\");","map":{"version":3,"names":["React","useEffect","useRef","MapContainer","TileLayer","useMap","L","styled","createCustomDeviceIcon","createEdgeNodeIcon","createAlertIcon","MAPBOX_CONFIG","jsxDEV","_jsxDEV","deviceTypeInfo","CCTV","color","icon","name","TrafficSensor","WasteBinSensor","SmartStreetlight","PollutionSensor","WaterQualitySensor","NoiseSensor","ParkingSensor","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MapWrapper","div","_c","MapControls","_c2","ControlButton","button","_c3","Legend","_c4","LegendItem","props","_c5","MapUpdater","devices","edgeNodes","alerts","onDeviceClick","_s","map","markersRef","current","forEach","marker","removeLayer","device","_deviceTypeInfo$devic","location","lat","lon","type","status","bindPopup","id","networkType","batteryLevel","on","addTo","push","node","connectedDevices","alert","severity","description","Date","timestamp","toLocaleString","_c6","CityMap","emergencyAlerts","_s2","mapRef","defaultCenter","defaultZoom","window","selectDevice","handleFitBounds","allLocations","d","n","length","fitBounds","padding","handleResetView","setView","children","center","zoom","ref","style","height","width","zoomControl","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","onClick","margin","fontSize","Object","entries","info","_c7","$RefreshReg$"],"sources":["D:/smart_city_communication_hub/frontend/src/components/CityMap.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { MapContainer, TileLayer, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport styled from 'styled-components';\r\nimport { createCustomDeviceIcon, createEdgeNodeIcon, createAlertIcon } from './DeviceIcons';\r\nimport { MAPBOX_CONFIG } from '../config/mapbox';\r\n\r\n// Enhanced legend with device-specific information\r\nconst deviceTypeInfo = {\r\n  CCTV: { color: '#2C3E50', icon: '📹', name: 'Security Cameras' },\r\n  TrafficSensor: { color: '#34495E', icon: '🚦', name: 'Traffic Controllers' },\r\n  WasteBinSensor: { color: '#8E44AD', icon: '🗑️', name: 'Waste Monitors' },\r\n  SmartStreetlight: { color: '#F39C12', icon: '💡', name: 'Smart Lighting' },\r\n  PollutionSensor: { color: '#95A5A6', icon: '🌡️', name: 'Air Quality' },\r\n  WaterQualitySensor: { color: '#3498DB', icon: '💧', name: 'Water Sensors' },\r\n  NoiseSensor: { color: '#E91E63', icon: '🔊', name: 'Sound Monitors' },\r\n  ParkingSensor: { color: '#3F51B5', icon: '🅿️', name: 'Parking Spaces' },\r\n};\r\n\r\n// Fix for default markers in React Leaflet\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\r\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n});\r\n\r\nconst MapWrapper = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  position: relative;\r\n\r\n  .leaflet-container {\r\n    height: 100%;\r\n    width: 100%;\r\n    background: #f0f2f5;\r\n  }\r\n`;\r\n\r\nconst MapControls = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  z-index: 1000;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst ControlButton = styled.button`\r\n  padding: 8px 12px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border: none;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  \r\n  &:hover {\r\n    background: rgba(255, 255, 255, 1);\r\n  }\r\n`;\r\n\r\nconst Legend = styled.div`\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 10px;\r\n  z-index: 1000;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  font-size: 12px;\r\n  min-width: 200px;\r\n`;\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 4px 0;\r\n  \r\n  &::before {\r\n    content: '';\r\n    width: 12px;\r\n    height: 12px;\r\n    border-radius: 50%;\r\n    background: ${props => props.color};\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nfunction MapUpdater({ devices, edgeNodes, alerts, onDeviceClick }) {\r\n  const map = useMap();\r\n  const markersRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    // Clear existing markers\r\n    markersRef.current.forEach(marker => {\r\n      map.removeLayer(marker);\r\n    });\r\n    markersRef.current = [];\r\n\r\n    // Add device markers with large, distinctive custom icons for each device type\r\n    devices.forEach(device => {\r\n      const marker = L.marker(\r\n        [device.location.lat, device.location.lon],\r\n        { icon: createCustomDeviceIcon(device.type, device.status, 40) }\r\n      );\r\n\r\n      marker.bindPopup(`\r\n        <div style=\"min-width: 200px;\">\r\n          <h4 style=\"margin: 0 0 8px 0; color: #333;\">${deviceTypeInfo[device.type]?.name || device.type}</h4>\r\n          <p style=\"margin: 2px 0;\"><strong>ID:</strong> ${device.id}</p>\r\n          <p style=\"margin: 2px 0;\"><strong>Status:</strong> \r\n            <span style=\"color: ${device.status === 'online' ? '#4CAF50' : '#F44336'};\">\r\n              ${device.status}\r\n            </span>\r\n          </p>\r\n          <p style=\"margin: 2px 0;\"><strong>Network:</strong> ${device.networkType}</p>\r\n          <p style=\"margin: 2px 0;\"><strong>Battery:</strong> ${device.batteryLevel}%</p>\r\n          <button onclick=\"window.selectDevice('${device.id}')\" \r\n                  style=\"\r\n                    margin-top: 8px; \r\n                    padding: 4px 8px; \r\n                    background: #667eea; \r\n                    color: white; \r\n                    border: none; \r\n                    border-radius: 4px; \r\n                    cursor: pointer;\r\n                  \">\r\n            View Details\r\n          </button>\r\n        </div>\r\n      `);\r\n\r\n      marker.on('click', () => onDeviceClick(device.id));\r\n      marker.addTo(map);\r\n      markersRef.current.push(marker);\r\n    });\r\n\r\n    // Add edge node markers with enhanced design\r\n    edgeNodes.forEach(node => {\r\n      const marker = L.marker(\r\n        [node.location.lat, node.location.lon],\r\n        { icon: createEdgeNodeIcon(40) }\r\n      );\r\n\r\n      marker.bindPopup(`\r\n        <div style=\"min-width: 200px;\">\r\n          <h4 style=\"margin: 0 0 8px 0; color: #333;\">Edge Computing Node</h4>\r\n          <p style=\"margin: 2px 0;\"><strong>ID:</strong> ${node.id}</p>\r\n          <p style=\"margin: 2px 0;\"><strong>Name:</strong> ${node.name || 'Unknown'}</p>\r\n          <p style=\"margin: 2px 0;\"><strong>Status:</strong> \r\n            <span style=\"color: ${node.status === 'online' ? '#4CAF50' : '#F44336'};\">\r\n              ${node.status}\r\n            </span>\r\n          </p>\r\n          <p style=\"margin: 2px 0;\"><strong>Connected Devices:</strong> ${node.connectedDevices}</p>\r\n        </div>\r\n      `);\r\n\r\n      marker.addTo(map);\r\n      markersRef.current.push(marker);\r\n    });\r\n\r\n    // Add alert markers with enhanced design\r\n    alerts.forEach(alert => {\r\n      if (alert.location) {\r\n        const marker = L.marker(\r\n          [alert.location.lat, alert.location.lon],\r\n          { icon: createAlertIcon(alert.severity, 32) }\r\n        );\r\n\r\n        marker.bindPopup(`\r\n          <div style=\"min-width: 200px;\">\r\n            <h4 style=\"margin: 0 0 8px 0; color: #F44336;\">🚨 Emergency Alert</h4>\r\n            <p style=\"margin: 2px 0;\"><strong>Type:</strong> ${alert.type}</p>\r\n            <p style=\"margin: 2px 0;\"><strong>Severity:</strong> \r\n              <span style=\"color: ${alert.severity === 'high' ? '#F44336' : '#FF9800'};\">\r\n                ${alert.severity}\r\n              </span>\r\n            </p>\r\n            <p style=\"margin: 2px 0;\"><strong>Description:</strong> ${alert.description}</p>\r\n            <p style=\"margin: 2px 0; font-size: 12px; color: #666;\">\r\n              ${new Date(alert.timestamp).toLocaleString()}\r\n            </p>\r\n          </div>\r\n        `);\r\n\r\n        marker.addTo(map);\r\n        markersRef.current.push(marker);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      markersRef.current.forEach(marker => {\r\n        map.removeLayer(marker);\r\n      });\r\n      markersRef.current = [];\r\n    };\r\n  }, [devices, edgeNodes, alerts, map, onDeviceClick]);\r\n\r\n  return null;\r\n}\r\n\r\nfunction CityMap({ devices = [], edgeNodes = [], emergencyAlerts = [], onDeviceClick }) {\r\n  const mapRef = useRef();\r\n\r\n  // Chennai city center coordinates\r\n  const defaultCenter = [13.0827, 80.2707]; // Chennai, Tamil Nadu, India\r\n  const defaultZoom = 13;\r\n\r\n  useEffect(() => {\r\n    // Make device click handler globally available for popup buttons\r\n    window.selectDevice = onDeviceClick;\r\n    \r\n    return () => {\r\n      delete window.selectDevice;\r\n    };\r\n  }, [onDeviceClick]);\r\n\r\n  const handleFitBounds = () => {\r\n    if (mapRef.current) {\r\n      const allLocations = [\r\n        ...devices.map(d => [d.location.lat, d.location.lon]),\r\n        ...edgeNodes.map(n => [n.location.lat, n.location.lon])\r\n      ];\r\n      \r\n      if (allLocations.length > 0) {\r\n        mapRef.current.fitBounds(allLocations, { padding: [20, 20] });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleResetView = () => {\r\n    if (mapRef.current) {\r\n      mapRef.current.setView(defaultCenter, defaultZoom);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MapWrapper>\r\n      <MapContainer\r\n        center={defaultCenter}\r\n        zoom={defaultZoom}\r\n        ref={mapRef}\r\n        style={{ height: '100%', width: '100%' }}\r\n        zoomControl={false}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        \r\n        <MapUpdater\r\n          devices={devices}\r\n          edgeNodes={edgeNodes}\r\n          alerts={emergencyAlerts}\r\n          onDeviceClick={onDeviceClick}\r\n        />\r\n      </MapContainer>\r\n\r\n      <MapControls>\r\n        <ControlButton onClick={handleFitBounds}>\r\n          📍 Fit All\r\n        </ControlButton>\r\n        <ControlButton onClick={handleResetView}>\r\n          🏠 Reset View\r\n        </ControlButton>\r\n      </MapControls>\r\n\r\n      <Legend>\r\n        <h4 style={{ margin: '0 0 8px 0', fontSize: '14px' }}>Device Types</h4>\r\n        {Object.entries(deviceTypeInfo).map(([type, info]) => (\r\n          <LegendItem key={type} color={info.color}>\r\n            {info.icon} {info.name}\r\n          </LegendItem>\r\n        ))}\r\n        <LegendItem color=\"#667eea\">🏢 Edge Computing Nodes</LegendItem>\r\n        {emergencyAlerts.length > 0 && (\r\n          <LegendItem color=\"#F44336\">⚠️ Active Alerts ({emergencyAlerts.length})</LegendItem>\r\n        )}\r\n      </Legend>\r\n    </MapWrapper>\r\n  );\r\n}\r\n\r\nexport default CityMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\smart_city_communication_hub\\\\frontend\\\\src\\\\components\\\\StatusPanel.js\";\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Device type icons for consistent display\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst deviceTypeIcons = {\n  CCTV: '📹',\n  TrafficSensor: '🚦',\n  WasteBinSensor: '🗑️',\n  SmartStreetlight: '💡',\n  PollutionSensor: '🌡️',\n  WaterQualitySensor: '💧',\n  NoiseSensor: '🔊',\n  ParkingSensor: '🅿️'\n};\nconst PanelContainer = styled.div`\n  padding: 20px;\n  height: 100%;\n  overflow-y: auto;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n`;\n_c = PanelContainer;\nconst PanelHeader = styled.div`\n  margin-bottom: 24px;\n`;\n_c2 = PanelHeader;\nconst PanelTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 8px;\n`;\n_c3 = PanelTitle;\nconst PanelSubtitle = styled.p`\n  color: #666;\n  font-size: 14px;\n  line-height: 1.4;\n`;\n_c4 = PanelSubtitle;\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 16px;\n  margin-bottom: 24px;\n`;\n_c5 = StatsGrid;\nconst StatCard = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  padding: 16px;\n  border-radius: 8px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n`;\n_c6 = StatCard;\nconst StatValue = styled.div`\n  font-size: 24px;\n  font-weight: 700;\n  color: #333;\n  margin-bottom: 4px;\n`;\n_c7 = StatValue;\nconst StatLabel = styled.div`\n  font-size: 12px;\n  color: #666;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n_c8 = StatLabel;\nconst DeviceList = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  border-radius: 8px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n`;\n_c9 = DeviceList;\nconst DeviceListHeader = styled.div`\n  padding: 16px;\n  border-bottom: 1px solid rgba(0,0,0,0.1);\n  font-weight: 600;\n  color: #333;\n`;\n_c0 = DeviceListHeader;\nconst DeviceItem = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px 16px;\n  border-bottom: 1px solid rgba(0,0,0,0.05);\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n_c1 = DeviceItem;\nconst DeviceIcon = styled.span`\n  font-size: 16px;\n  margin-right: 12px;\n`;\n_c10 = DeviceIcon;\nconst DeviceInfo = styled.div`\n  flex: 1;\n`;\n_c11 = DeviceInfo;\nconst DeviceName = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 2px;\n`;\n_c12 = DeviceName;\nconst DeviceStatus = styled.div`\n  font-size: 12px;\n  color: ${props => props.status === 'online' ? '#4CAF50' : props.status === 'low_battery' ? '#FF9800' : '#F44336'};\n`;\n_c13 = DeviceStatus;\nconst BatteryBar = styled.div`\n  width: 40px;\n  height: 6px;\n  background: rgba(0,0,0,0.1);\n  border-radius: 3px;\n  overflow: hidden;\n  margin-left: 8px;\n`;\n_c14 = BatteryBar;\nconst BatteryFill = styled.div`\n  height: 100%;\n  background: ${props => props.level > 50 ? '#4CAF50' : props.level > 20 ? '#FF9800' : '#F44336'};\n  width: ${props => props.level}%;\n  transition: all 0.3s ease;\n`;\n_c15 = BatteryFill;\nconst ControlSection = styled.div`\n  margin-top: 24px;\n  padding-top: 24px;\n  border-top: 1px solid rgba(0,0,0,0.1);\n`;\n_c16 = ControlSection;\nconst ControlButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  margin-bottom: 8px;\n  \n  &.primary {\n    background: #667eea;\n    color: white;\n  }\n  \n  &.secondary {\n    background: rgba(102, 126, 234, 0.1);\n    color: #667eea;\n    border: 1px solid rgba(102, 126, 234, 0.3);\n  }\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n`;\n_c17 = ControlButton;\nfunction StatusPanel({\n  cityData = {},\n  simulationRunning = false,\n  onToggleSimulation\n}) {\n  const {\n    devices = [],\n    edgeNodes = []\n  } = cityData;\n  const deviceStats = devices.reduce((acc, device) => {\n    acc.total++;\n    if (device.status === 'online') acc.online++;\n    if (device.status === 'low_battery') acc.lowBattery++;\n    if (device.status === 'offline') acc.offline++;\n    return acc;\n  }, {\n    total: 0,\n    online: 0,\n    lowBattery: 0,\n    offline: 0\n  });\n  const avgBattery = devices.length > 0 ? devices.reduce((sum, device) => sum + device.batteryLevel, 0) / devices.length : 100;\n  return /*#__PURE__*/_jsxDEV(PanelContainer, {\n    children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n      children: [/*#__PURE__*/_jsxDEV(PanelTitle, {\n        children: \"City Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PanelSubtitle, {\n        children: \"Real-time overview of all IoT devices and infrastructure components in the smart city network.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatsGrid, {\n      children: [/*#__PURE__*/_jsxDEV(StatCard, {\n        children: [/*#__PURE__*/_jsxDEV(StatValue, {\n          children: deviceStats.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n          children: \"Total Devices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        children: [/*#__PURE__*/_jsxDEV(StatValue, {\n          children: deviceStats.online\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n          children: \"Online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        children: [/*#__PURE__*/_jsxDEV(StatValue, {\n          children: edgeNodes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n          children: \"Edge Nodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        children: [/*#__PURE__*/_jsxDEV(StatValue, {\n          children: [Math.round(avgBattery), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n          children: \"Avg Battery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeviceList, {\n      children: [/*#__PURE__*/_jsxDEV(DeviceListHeader, {\n        children: [\"Device Status (\", devices.length, \" devices)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), devices.slice(0, 10).map(device => /*#__PURE__*/_jsxDEV(DeviceItem, {\n        children: [/*#__PURE__*/_jsxDEV(DeviceIcon, {\n          children: deviceTypeIcons[device.type] || '📱'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeviceInfo, {\n          children: [/*#__PURE__*/_jsxDEV(DeviceName, {\n            children: device.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DeviceStatus, {\n            status: device.status,\n            children: [device.status, \" \\u2022 \", device.networkType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BatteryBar, {\n          children: /*#__PURE__*/_jsxDEV(BatteryFill, {\n            level: device.batteryLevel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, device.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)), devices.length > 10 && /*#__PURE__*/_jsxDEV(DeviceItem, {\n        style: {\n          justifyContent: 'center',\n          fontStyle: 'italic',\n          color: '#666'\n        },\n        children: [\"... and \", devices.length - 10, \" more devices\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlSection, {\n      children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n        className: simulationRunning ? 'secondary' : 'primary',\n        onClick: onToggleSimulation,\n        children: simulationRunning ? '⏹️ Stop Simulation' : '▶️ Start Simulation'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        className: \"secondary\",\n        children: \"\\uD83D\\uDCCA View Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        className: \"secondary\",\n        children: \"\\u2699\\uFE0F System Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n_c18 = StatusPanel;\nexport default StatusPanel;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18;\n$RefreshReg$(_c, \"PanelContainer\");\n$RefreshReg$(_c2, \"PanelHeader\");\n$RefreshReg$(_c3, \"PanelTitle\");\n$RefreshReg$(_c4, \"PanelSubtitle\");\n$RefreshReg$(_c5, \"StatsGrid\");\n$RefreshReg$(_c6, \"StatCard\");\n$RefreshReg$(_c7, \"StatValue\");\n$RefreshReg$(_c8, \"StatLabel\");\n$RefreshReg$(_c9, \"DeviceList\");\n$RefreshReg$(_c0, \"DeviceListHeader\");\n$RefreshReg$(_c1, \"DeviceItem\");\n$RefreshReg$(_c10, \"DeviceIcon\");\n$RefreshReg$(_c11, \"DeviceInfo\");\n$RefreshReg$(_c12, \"DeviceName\");\n$RefreshReg$(_c13, \"DeviceStatus\");\n$RefreshReg$(_c14, \"BatteryBar\");\n$RefreshReg$(_c15, \"BatteryFill\");\n$RefreshReg$(_c16, \"ControlSection\");\n$RefreshReg$(_c17, \"ControlButton\");\n$RefreshReg$(_c18, \"StatusPanel\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","deviceTypeIcons","CCTV","TrafficSensor","WasteBinSensor","SmartStreetlight","PollutionSensor","WaterQualitySensor","NoiseSensor","ParkingSensor","PanelContainer","div","_c","PanelHeader","_c2","PanelTitle","h2","_c3","PanelSubtitle","p","_c4","StatsGrid","_c5","StatCard","_c6","StatValue","_c7","StatLabel","_c8","DeviceList","_c9","DeviceListHeader","_c0","DeviceItem","_c1","DeviceIcon","span","_c10","DeviceInfo","_c11","DeviceName","_c12","DeviceStatus","props","status","_c13","BatteryBar","_c14","BatteryFill","level","_c15","ControlSection","_c16","ControlButton","button","_c17","StatusPanel","cityData","simulationRunning","onToggleSimulation","devices","edgeNodes","deviceStats","reduce","acc","device","total","online","lowBattery","offline","avgBattery","length","sum","batteryLevel","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","slice","map","type","id","networkType","style","justifyContent","fontStyle","color","className","onClick","_c18","$RefreshReg$"],"sources":["D:/smart_city_communication_hub/frontend/src/components/StatusPanel.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// Device type icons for consistent display\r\nconst deviceTypeIcons = {\r\n  CCTV: '📹',\r\n  TrafficSensor: '🚦',\r\n  WasteBinSensor: '🗑️',\r\n  SmartStreetlight: '💡',\r\n  PollutionSensor: '🌡️',\r\n  WaterQualitySensor: '💧',\r\n  NoiseSensor: '🔊',\r\n  ParkingSensor: '🅿️',\r\n};\r\n\r\nconst PanelContainer = styled.div`\r\n  padding: 20px;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(10px);\r\n`;\r\n\r\nconst PanelHeader = styled.div`\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst PanelTitle = styled.h2`\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst PanelSubtitle = styled.p`\r\n  color: #666;\r\n  font-size: 14px;\r\n  line-height: 1.4;\r\n`;\r\n\r\nconst StatsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 16px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst StatCard = styled.div`\r\n  background: rgba(255, 255, 255, 0.8);\r\n  padding: 16px;\r\n  border-radius: 8px;\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst StatValue = styled.div`\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #333;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nconst StatLabel = styled.div`\r\n  font-size: 12px;\r\n  color: #666;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n`;\r\n\r\nconst DeviceList = styled.div`\r\n  background: rgba(255, 255, 255, 0.8);\r\n  border-radius: 8px;\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst DeviceListHeader = styled.div`\r\n  padding: 16px;\r\n  border-bottom: 1px solid rgba(0,0,0,0.1);\r\n  font-weight: 600;\r\n  color: #333;\r\n`;\r\n\r\nconst DeviceItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 12px 16px;\r\n  border-bottom: 1px solid rgba(0,0,0,0.05);\r\n  \r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst DeviceIcon = styled.span`\r\n  font-size: 16px;\r\n  margin-right: 12px;\r\n`;\r\n\r\nconst DeviceInfo = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst DeviceName = styled.div`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #333;\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nconst DeviceStatus = styled.div`\r\n  font-size: 12px;\r\n  color: ${props => \r\n    props.status === 'online' ? '#4CAF50' : \r\n    props.status === 'low_battery' ? '#FF9800' : '#F44336'};\r\n`;\r\n\r\nconst BatteryBar = styled.div`\r\n  width: 40px;\r\n  height: 6px;\r\n  background: rgba(0,0,0,0.1);\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst BatteryFill = styled.div`\r\n  height: 100%;\r\n  background: ${props => \r\n    props.level > 50 ? '#4CAF50' : \r\n    props.level > 20 ? '#FF9800' : '#F44336'};\r\n  width: ${props => props.level}%;\r\n  transition: all 0.3s ease;\r\n`;\r\n\r\nconst ControlSection = styled.div`\r\n  margin-top: 24px;\r\n  padding-top: 24px;\r\n  border-top: 1px solid rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst ControlButton = styled.button`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: none;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  margin-bottom: 8px;\r\n  \r\n  &.primary {\r\n    background: #667eea;\r\n    color: white;\r\n  }\r\n  \r\n  &.secondary {\r\n    background: rgba(102, 126, 234, 0.1);\r\n    color: #667eea;\r\n    border: 1px solid rgba(102, 126, 234, 0.3);\r\n  }\r\n  \r\n  &:hover {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 4px 12px rgba(0,0,0,0.15);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nfunction StatusPanel({ cityData = {}, simulationRunning = false, onToggleSimulation }) {\r\n  const { devices = [], edgeNodes = [] } = cityData;\r\n  \r\n  const deviceStats = devices.reduce((acc, device) => {\r\n    acc.total++;\r\n    if (device.status === 'online') acc.online++;\r\n    if (device.status === 'low_battery') acc.lowBattery++;\r\n    if (device.status === 'offline') acc.offline++;\r\n    return acc;\r\n  }, { total: 0, online: 0, lowBattery: 0, offline: 0 });\r\n\r\n  const avgBattery = devices.length > 0 \r\n    ? devices.reduce((sum, device) => sum + device.batteryLevel, 0) / devices.length \r\n    : 100;\r\n\r\n  return (\r\n    <PanelContainer>\r\n      <PanelHeader>\r\n        <PanelTitle>City Status</PanelTitle>\r\n        <PanelSubtitle>\r\n          Real-time overview of all IoT devices and infrastructure components\r\n          in the smart city network.\r\n        </PanelSubtitle>\r\n      </PanelHeader>\r\n\r\n      <StatsGrid>\r\n        <StatCard>\r\n          <StatValue>{deviceStats.total}</StatValue>\r\n          <StatLabel>Total Devices</StatLabel>\r\n        </StatCard>\r\n        \r\n        <StatCard>\r\n          <StatValue>{deviceStats.online}</StatValue>\r\n          <StatLabel>Online</StatLabel>\r\n        </StatCard>\r\n        \r\n        <StatCard>\r\n          <StatValue>{edgeNodes.length}</StatValue>\r\n          <StatLabel>Edge Nodes</StatLabel>\r\n        </StatCard>\r\n        \r\n        <StatCard>\r\n          <StatValue>{Math.round(avgBattery)}%</StatValue>\r\n          <StatLabel>Avg Battery</StatLabel>\r\n        </StatCard>\r\n      </StatsGrid>\r\n\r\n      <DeviceList>\r\n        <DeviceListHeader>\r\n          Device Status ({devices.length} devices)\r\n        </DeviceListHeader>\r\n        \r\n        {devices.slice(0, 10).map(device => (\r\n          <DeviceItem key={device.id}>\r\n            <DeviceIcon>{deviceTypeIcons[device.type] || '📱'}</DeviceIcon>\r\n            <DeviceInfo>\r\n              <DeviceName>{device.id}</DeviceName>\r\n              <DeviceStatus status={device.status}>\r\n                {device.status} • {device.networkType}\r\n              </DeviceStatus>\r\n            </DeviceInfo>\r\n            <BatteryBar>\r\n              <BatteryFill level={device.batteryLevel} />\r\n            </BatteryBar>\r\n          </DeviceItem>\r\n        ))}\r\n        \r\n        {devices.length > 10 && (\r\n          <DeviceItem style={{ justifyContent: 'center', fontStyle: 'italic', color: '#666' }}>\r\n            ... and {devices.length - 10} more devices\r\n          </DeviceItem>\r\n        )}\r\n      </DeviceList>\r\n\r\n      <ControlSection>\r\n        <ControlButton\r\n          className={simulationRunning ? 'secondary' : 'primary'}\r\n          onClick={onToggleSimulation}\r\n        >\r\n          {simulationRunning ? '⏹️ Stop Simulation' : '▶️ Start Simulation'}\r\n        </ControlButton>\r\n        \r\n        <ControlButton className=\"secondary\">\r\n          📊 View Analytics\r\n        </ControlButton>\r\n        \r\n        <ControlButton className=\"secondary\">\r\n          ⚙️ System Settings\r\n        </ControlButton>\r\n      </ControlSection>\r\n    </PanelContainer>\r\n  );\r\n}\r\n\r\nexport default StatusPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
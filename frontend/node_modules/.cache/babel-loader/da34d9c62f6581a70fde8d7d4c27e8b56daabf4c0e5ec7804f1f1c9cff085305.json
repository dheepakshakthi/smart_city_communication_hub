{"ast":null,"code":"import L from 'leaflet';\n\n// Custom SVG icons for different device types - focused on device recognition\nconst DeviceIcons = {\n  // CCTV Camera Icon - Security Camera\n  CCTV: (status = 'online', size = 24) => {\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#2C3E50\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(6, 7)\">\n          <!-- Camera body -->\n          <rect x=\"2\" y=\"2\" width=\"8\" height=\"6\" rx=\"1\" fill=\"white\"/>\n          <!-- Lens -->\n          <circle cx=\"9\" cy=\"4\" r=\"2\" fill=\"white\"/>\n          <circle cx=\"9\" cy=\"4\" r=\"1.2\" fill=\"#2C3E50\"/>\n          <circle cx=\"9\" cy=\"4\" r=\"0.6\" fill=\"#E74C3C\"/>\n          <!-- Mount -->\n          <rect x=\"0\" y=\"4\" width=\"2\" height=\"2\" fill=\"white\"/>\n        </g>\n      </svg>\n    `;\n  },\n  // Traffic Light Icon\n  TrafficSensor: (status = 'online', size = 24) => {\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#34495E\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(8, 5)\">\n          <!-- Traffic light housing -->\n          <rect x=\"0\" y=\"0\" width=\"8\" height=\"14\" rx=\"2\" fill=\"#2C3E50\"/>\n          <!-- Red light -->\n          <circle cx=\"4\" cy=\"3\" r=\"1.5\" fill=\"#E74C3C\"/>\n          <!-- Yellow light -->\n          <circle cx=\"4\" cy=\"7\" r=\"1.5\" fill=\"#F39C12\"/>\n          <!-- Green light -->\n          <circle cx=\"4\" cy=\"11\" r=\"1.5\" fill=\"#27AE60\"/>\n          <!-- Post -->\n          <rect x=\"3.5\" y=\"14\" width=\"1\" height=\"3\" fill=\"#2C3E50\"/>\n        </g>\n      </svg>\n    `;\n  },\n  // Waste Bin Icon\n  WasteBinSensor: (status = 'online', size = 24) => {\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#8E44AD\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(6, 6)\">\n          <!-- Bin body -->\n          <rect x=\"2\" y=\"4\" width=\"8\" height=\"8\" rx=\"0.5\" fill=\"white\"/>\n          <!-- Lid -->\n          <rect x=\"0\" y=\"3\" width=\"12\" height=\"1.5\" rx=\"0.5\" fill=\"white\"/>\n          <!-- Handle -->\n          <rect x=\"4\" y=\"1\" width=\"4\" height=\"0.8\" rx=\"0.4\" fill=\"white\"/>\n          <!-- Waste indicator lines -->\n          <line x1=\"4\" y1=\"6\" x2=\"4\" y2=\"10\" stroke=\"#8E44AD\" stroke-width=\"0.8\"/>\n          <line x1=\"6\" y1=\"6\" x2=\"6\" y2=\"10\" stroke=\"#8E44AD\" stroke-width=\"0.8\"/>\n          <line x1=\"8\" y1=\"6\" x2=\"8\" y2=\"10\" stroke=\"#8E44AD\" stroke-width=\"0.8\"/>\n        </g>\n      </svg>\n    `;\n  },\n  // Smart Street Light Icon\n  SmartStreetlight: (status = 'online', size = 24) => {\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#F39C12\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(9, 3)\">\n          <!-- Light fixture -->\n          <ellipse cx=\"3\" cy=\"4\" rx=\"4\" ry=\"2.5\" fill=\"white\"/>\n          <ellipse cx=\"3\" cy=\"4\" rx=\"2.5\" ry=\"1.5\" fill=\"#F39C12\"/>\n          <!-- Light rays -->\n          <path d=\"M0 6 L1 8 L5 8 L6 6\" fill=\"white\" opacity=\"0.7\"/>\n          <path d=\"M-0.5 8 L1.5 10 L4.5 10 L6.5 8\" fill=\"white\" opacity=\"0.5\"/>\n          <!-- Pole -->\n          <rect x=\"2.5\" y=\"6\" width=\"1\" height=\"14\" fill=\"white\"/>\n          <!-- Base -->\n          <rect x=\"1\" y=\"19\" width=\"4\" height=\"1\" fill=\"white\"/>\n        </g>\n      </svg>\n    `;\n  },\n  // Pollution Sensor Icon\n  PollutionSensor: (status = 'online', size = 24) => {\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#95A5A6\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(6, 6)\">\n          <!-- Sensor housing -->\n          <rect x=\"2\" y=\"6\" width=\"8\" height=\"6\" rx=\"1\" fill=\"white\"/>\n          <!-- Antenna/probe -->\n          <rect x=\"4.5\" y=\"0\" width=\"3\" height=\"6\" fill=\"white\"/>\n          <!-- Sensor element -->\n          <circle cx=\"6\" cy=\"2.5\" r=\"1\" fill=\"#95A5A6\"/>\n          <!-- Display lines -->\n          <line x1=\"3\" y1=\"8\" x2=\"9\" y2=\"8\" stroke=\"#95A5A6\" stroke-width=\"0.5\"/>\n          <line x1=\"3\" y1=\"9.5\" x2=\"9\" y2=\"9.5\" stroke=\"#95A5A6\" stroke-width=\"0.5\"/>\n          <line x1=\"3\" y1=\"11\" x2=\"7\" y2=\"11\" stroke=\"#95A5A6\" stroke-width=\"0.5\"/>\n        </g>\n      </svg>\n    `;\n  },\n  // Water Quality Sensor Icon\n  WaterQualitySensor: (status = 'online', size = 24) => {\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#3498DB\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(7, 5)\">\n          <!-- Water drop -->\n          <path d=\"M5 2 C5 0 3 0 3 0 S1 0 1 2 C1 3.5 2 4.5 3 4.5 S5 3.5 5 2 Z\" fill=\"white\"/>\n          <!-- Sensor device -->\n          <rect x=\"1\" y=\"5\" width=\"8\" height=\"8\" rx=\"1\" fill=\"white\"/>\n          <!-- Water waves -->\n          <path d=\"M2 7 Q3 6 4 7 T6 7 T8 7\" stroke=\"#3498DB\" stroke-width=\"1\" fill=\"none\"/>\n          <path d=\"M2 9 Q3 8 4 9 T6 9 T8 9\" stroke=\"#3498DB\" stroke-width=\"1\" fill=\"none\"/>\n          <!-- Probe -->\n          <rect x=\"4\" y=\"11\" width=\"0.5\" height=\"3\" fill=\"#3498DB\"/>\n          <circle cx=\"7.5\" cy=\"11.5\" r=\"0.5\" fill=\"#3498DB\"/>\n        </g>\n      </svg>\n    `;\n  },\n  // Noise Sensor Icon\n  NoiseSensor: (status = 'online', size = 24) => {\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#E91E63\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(6, 6)\">\n          <!-- Microphone -->\n          <rect x=\"2\" y=\"4\" width=\"3\" height=\"8\" rx=\"1.5\" fill=\"white\"/>\n          <rect x=\"0\" y=\"6\" width=\"2\" height=\"4\" rx=\"1\" fill=\"white\"/>\n          <!-- Sound waves -->\n          <path d=\"M6 4 Q9 7 9 10 Q9 13 6 16\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"/>\n          <path d=\"M8 6 Q10 8 10 10 Q10 12 8 14\" stroke=\"white\" stroke-width=\"1\" fill=\"none\"/>\n          <path d=\"M10 8 Q11 9 11 10 Q11 11 10 12\" stroke=\"white\" stroke-width=\"0.8\" fill=\"none\"/>\n          <!-- Base -->\n          <rect x=\"1.5\" y=\"12\" width=\"4\" height=\"1\" fill=\"white\"/>\n        </g>\n      </svg>\n    `;\n  },\n  // Parking Sensor Icon\n  ParkingSensor: (status = 'online', size = 24) => {\n    return `\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#3F51B5\" stroke=\"white\" stroke-width=\"2\"/>\n        <g transform=\"translate(4, 6)\">\n          <!-- Car outline -->\n          <rect x=\"2\" y=\"3\" width=\"12\" height=\"6\" rx=\"2\" fill=\"white\"/>\n          <!-- Wheels -->\n          <circle cx=\"5\" cy=\"8\" r=\"1.5\" fill=\"#3F51B5\"/>\n          <circle cx=\"11\" cy=\"8\" r=\"1.5\" fill=\"#3F51B5\"/>\n          <!-- Windows -->\n          <rect x=\"4\" y=\"4\" width=\"8\" height=\"3\" rx=\"1\" fill=\"#3F51B5\"/>\n          <!-- P symbol -->\n          <rect x=\"7\" y=\"1\" width=\"2\" height=\"1\" fill=\"white\"/>\n          <text x=\"8\" y=\"1.8\" text-anchor=\"middle\" font-size=\"2\" fill=\"#3F51B5\" font-weight=\"bold\">P</text>\n        </g>\n      </svg>\n    `;\n  }\n};\n\n// Create custom Leaflet icon for devices - emphasizing device type over status\nexport const createCustomDeviceIcon = (type, status = 'online', size = 32) => {\n  const iconSvg = DeviceIcons[type] ? DeviceIcons[type](status, size - 8) : DeviceIcons.CCTV(status, size - 8);\n  return L.divIcon({\n    html: `<div style=\"position: relative; width: ${size}px; height: ${size}px; filter: drop-shadow(0 2px 4px rgba(0,0,0,0.3));\">\n      ${iconSvg}\n    </div>`,\n    className: 'custom-device-icon',\n    iconSize: [size, size],\n    iconAnchor: [size / 2, size / 2]\n  });\n};\n\n// Edge Node Icon with enhanced design\nexport const createEdgeNodeIcon = (size = 40) => {\n  return L.divIcon({\n    html: `\n      <div style=\"position: relative; width: ${size}px; height: ${size}px;\">\n        <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 40 40\" fill=\"none\">\n          <defs>\n            <linearGradient id=\"edgeGrad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n              <stop offset=\"0%\" style=\"stop-color:#667eea\"/>\n              <stop offset=\"100%\" style=\"stop-color:#764ba2\"/>\n            </linearGradient>\n          </defs>\n          <rect x=\"2\" y=\"2\" width=\"36\" height=\"36\" rx=\"6\" fill=\"url(#edgeGrad)\" stroke=\"white\" stroke-width=\"2\"/>\n          <g transform=\"translate(10, 8)\">\n            <rect x=\"0\" y=\"4\" width=\"20\" height=\"12\" rx=\"2\" fill=\"white\"/>\n            <rect x=\"2\" y=\"6\" width=\"5\" height=\"2\" fill=\"#667eea\"/>\n            <rect x=\"2\" y=\"9\" width=\"8\" height=\"2\" fill=\"#667eea\"/>\n            <rect x=\"2\" y=\"12\" width=\"6\" height=\"2\" fill=\"#667eea\"/>\n            <circle cx=\"15\" cy=\"10\" r=\"3\" fill=\"white\" stroke=\"#667eea\" stroke-width=\"2\"/>\n            <circle cx=\"15\" cy=\"10\" r=\"1\" fill=\"#667eea\"/>\n          </g>\n          <g transform=\"translate(8, 22)\">\n            <rect x=\"0\" y=\"0\" width=\"6\" height=\"6\" rx=\"1\" fill=\"white\" opacity=\"0.8\"/>\n            <rect x=\"8\" y=\"0\" width=\"6\" height=\"6\" rx=\"1\" fill=\"white\" opacity=\"0.8\"/>\n            <rect x=\"16\" y=\"0\" width=\"6\" height=\"6\" rx=\"1\" fill=\"white\" opacity=\"0.8\"/>\n          </g>\n        </svg>\n      </div>\n    `,\n    className: 'edge-node-icon',\n    iconSize: [size, size],\n    iconAnchor: [size / 2, size / 2]\n  });\n};\n\n// Alert Icon with pulsing animation\nexport const createAlertIcon = (severity, size = 32) => {\n  const colors = {\n    high: '#F44336',\n    medium: '#FF9800',\n    low: '#FFC107'\n  };\n  const color = colors[severity] || colors.medium;\n  return L.divIcon({\n    html: `\n      <div style=\"position: relative; width: ${size}px; height: ${size}px;\">\n        <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 32 32\" fill=\"none\">\n          <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"${color}\" stroke=\"white\" stroke-width=\"3\"/>\n          <g transform=\"translate(11, 8)\">\n            <path d=\"M5 0 L9 7 L1 7 Z\" fill=\"white\"/>\n            <circle cx=\"5\" cy=\"10\" r=\"1\" fill=\"white\"/>\n            <rect x=\"4.2\" y=\"3\" width=\"1.6\" height=\"4\" fill=\"${color}\"/>\n          </g>\n        </svg>\n        <style>\n          .alert-pulse-${severity} {\n            animation: alertPulse 2s infinite;\n          }\n          @keyframes alertPulse {\n            0% { transform: scale(1); opacity: 1; }\n            50% { transform: scale(1.15); opacity: 0.7; }\n            100% { transform: scale(1); opacity: 1; }\n          }\n        </style>\n      </div>\n    `,\n    className: `alert-icon alert-pulse-${severity}`,\n    iconSize: [size, size],\n    iconAnchor: [size / 2, size / 2]\n  });\n};\nexport default DeviceIcons;","map":{"version":3,"names":["L","DeviceIcons","CCTV","status","size","TrafficSensor","WasteBinSensor","SmartStreetlight","PollutionSensor","WaterQualitySensor","NoiseSensor","ParkingSensor","createCustomDeviceIcon","type","iconSvg","divIcon","html","className","iconSize","iconAnchor","createEdgeNodeIcon","createAlertIcon","severity","colors","high","medium","low","color"],"sources":["D:/smart_city_communication_hub/frontend/src/components/DeviceIcons.js"],"sourcesContent":["import L from 'leaflet';\r\n\r\n// Custom SVG icons for different device types - focused on device recognition\r\nconst DeviceIcons = {\r\n  // CCTV Camera Icon - Security Camera\r\n  CCTV: (status = 'online', size = 24) => {\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#2C3E50\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(6, 7)\">\r\n          <!-- Camera body -->\r\n          <rect x=\"2\" y=\"2\" width=\"8\" height=\"6\" rx=\"1\" fill=\"white\"/>\r\n          <!-- Lens -->\r\n          <circle cx=\"9\" cy=\"4\" r=\"2\" fill=\"white\"/>\r\n          <circle cx=\"9\" cy=\"4\" r=\"1.2\" fill=\"#2C3E50\"/>\r\n          <circle cx=\"9\" cy=\"4\" r=\"0.6\" fill=\"#E74C3C\"/>\r\n          <!-- Mount -->\r\n          <rect x=\"0\" y=\"4\" width=\"2\" height=\"2\" fill=\"white\"/>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Traffic Light Icon\r\n  TrafficSensor: (status = 'online', size = 24) => {\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#34495E\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(8, 5)\">\r\n          <!-- Traffic light housing -->\r\n          <rect x=\"0\" y=\"0\" width=\"8\" height=\"14\" rx=\"2\" fill=\"#2C3E50\"/>\r\n          <!-- Red light -->\r\n          <circle cx=\"4\" cy=\"3\" r=\"1.5\" fill=\"#E74C3C\"/>\r\n          <!-- Yellow light -->\r\n          <circle cx=\"4\" cy=\"7\" r=\"1.5\" fill=\"#F39C12\"/>\r\n          <!-- Green light -->\r\n          <circle cx=\"4\" cy=\"11\" r=\"1.5\" fill=\"#27AE60\"/>\r\n          <!-- Post -->\r\n          <rect x=\"3.5\" y=\"14\" width=\"1\" height=\"3\" fill=\"#2C3E50\"/>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Waste Bin Icon\r\n  WasteBinSensor: (status = 'online', size = 24) => {\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#8E44AD\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(6, 6)\">\r\n          <!-- Bin body -->\r\n          <rect x=\"2\" y=\"4\" width=\"8\" height=\"8\" rx=\"0.5\" fill=\"white\"/>\r\n          <!-- Lid -->\r\n          <rect x=\"0\" y=\"3\" width=\"12\" height=\"1.5\" rx=\"0.5\" fill=\"white\"/>\r\n          <!-- Handle -->\r\n          <rect x=\"4\" y=\"1\" width=\"4\" height=\"0.8\" rx=\"0.4\" fill=\"white\"/>\r\n          <!-- Waste indicator lines -->\r\n          <line x1=\"4\" y1=\"6\" x2=\"4\" y2=\"10\" stroke=\"#8E44AD\" stroke-width=\"0.8\"/>\r\n          <line x1=\"6\" y1=\"6\" x2=\"6\" y2=\"10\" stroke=\"#8E44AD\" stroke-width=\"0.8\"/>\r\n          <line x1=\"8\" y1=\"6\" x2=\"8\" y2=\"10\" stroke=\"#8E44AD\" stroke-width=\"0.8\"/>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Smart Street Light Icon\r\n  SmartStreetlight: (status = 'online', size = 24) => {\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#F39C12\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(9, 3)\">\r\n          <!-- Light fixture -->\r\n          <ellipse cx=\"3\" cy=\"4\" rx=\"4\" ry=\"2.5\" fill=\"white\"/>\r\n          <ellipse cx=\"3\" cy=\"4\" rx=\"2.5\" ry=\"1.5\" fill=\"#F39C12\"/>\r\n          <!-- Light rays -->\r\n          <path d=\"M0 6 L1 8 L5 8 L6 6\" fill=\"white\" opacity=\"0.7\"/>\r\n          <path d=\"M-0.5 8 L1.5 10 L4.5 10 L6.5 8\" fill=\"white\" opacity=\"0.5\"/>\r\n          <!-- Pole -->\r\n          <rect x=\"2.5\" y=\"6\" width=\"1\" height=\"14\" fill=\"white\"/>\r\n          <!-- Base -->\r\n          <rect x=\"1\" y=\"19\" width=\"4\" height=\"1\" fill=\"white\"/>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Pollution Sensor Icon\r\n  PollutionSensor: (status = 'online', size = 24) => {\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#95A5A6\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(6, 6)\">\r\n          <!-- Sensor housing -->\r\n          <rect x=\"2\" y=\"6\" width=\"8\" height=\"6\" rx=\"1\" fill=\"white\"/>\r\n          <!-- Antenna/probe -->\r\n          <rect x=\"4.5\" y=\"0\" width=\"3\" height=\"6\" fill=\"white\"/>\r\n          <!-- Sensor element -->\r\n          <circle cx=\"6\" cy=\"2.5\" r=\"1\" fill=\"#95A5A6\"/>\r\n          <!-- Display lines -->\r\n          <line x1=\"3\" y1=\"8\" x2=\"9\" y2=\"8\" stroke=\"#95A5A6\" stroke-width=\"0.5\"/>\r\n          <line x1=\"3\" y1=\"9.5\" x2=\"9\" y2=\"9.5\" stroke=\"#95A5A6\" stroke-width=\"0.5\"/>\r\n          <line x1=\"3\" y1=\"11\" x2=\"7\" y2=\"11\" stroke=\"#95A5A6\" stroke-width=\"0.5\"/>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Water Quality Sensor Icon\r\n  WaterQualitySensor: (status = 'online', size = 24) => {\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#3498DB\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(7, 5)\">\r\n          <!-- Water drop -->\r\n          <path d=\"M5 2 C5 0 3 0 3 0 S1 0 1 2 C1 3.5 2 4.5 3 4.5 S5 3.5 5 2 Z\" fill=\"white\"/>\r\n          <!-- Sensor device -->\r\n          <rect x=\"1\" y=\"5\" width=\"8\" height=\"8\" rx=\"1\" fill=\"white\"/>\r\n          <!-- Water waves -->\r\n          <path d=\"M2 7 Q3 6 4 7 T6 7 T8 7\" stroke=\"#3498DB\" stroke-width=\"1\" fill=\"none\"/>\r\n          <path d=\"M2 9 Q3 8 4 9 T6 9 T8 9\" stroke=\"#3498DB\" stroke-width=\"1\" fill=\"none\"/>\r\n          <!-- Probe -->\r\n          <rect x=\"4\" y=\"11\" width=\"0.5\" height=\"3\" fill=\"#3498DB\"/>\r\n          <circle cx=\"7.5\" cy=\"11.5\" r=\"0.5\" fill=\"#3498DB\"/>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Noise Sensor Icon\r\n  NoiseSensor: (status = 'online', size = 24) => {\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#E91E63\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(6, 6)\">\r\n          <!-- Microphone -->\r\n          <rect x=\"2\" y=\"4\" width=\"3\" height=\"8\" rx=\"1.5\" fill=\"white\"/>\r\n          <rect x=\"0\" y=\"6\" width=\"2\" height=\"4\" rx=\"1\" fill=\"white\"/>\r\n          <!-- Sound waves -->\r\n          <path d=\"M6 4 Q9 7 9 10 Q9 13 6 16\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"/>\r\n          <path d=\"M8 6 Q10 8 10 10 Q10 12 8 14\" stroke=\"white\" stroke-width=\"1\" fill=\"none\"/>\r\n          <path d=\"M10 8 Q11 9 11 10 Q11 11 10 12\" stroke=\"white\" stroke-width=\"0.8\" fill=\"none\"/>\r\n          <!-- Base -->\r\n          <rect x=\"1.5\" y=\"12\" width=\"4\" height=\"1\" fill=\"white\"/>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  },\r\n\r\n  // Parking Sensor Icon\r\n  ParkingSensor: (status = 'online', size = 24) => {\r\n    return `\r\n      <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n        <circle cx=\"12\" cy=\"12\" r=\"11\" fill=\"#3F51B5\" stroke=\"white\" stroke-width=\"2\"/>\r\n        <g transform=\"translate(4, 6)\">\r\n          <!-- Car outline -->\r\n          <rect x=\"2\" y=\"3\" width=\"12\" height=\"6\" rx=\"2\" fill=\"white\"/>\r\n          <!-- Wheels -->\r\n          <circle cx=\"5\" cy=\"8\" r=\"1.5\" fill=\"#3F51B5\"/>\r\n          <circle cx=\"11\" cy=\"8\" r=\"1.5\" fill=\"#3F51B5\"/>\r\n          <!-- Windows -->\r\n          <rect x=\"4\" y=\"4\" width=\"8\" height=\"3\" rx=\"1\" fill=\"#3F51B5\"/>\r\n          <!-- P symbol -->\r\n          <rect x=\"7\" y=\"1\" width=\"2\" height=\"1\" fill=\"white\"/>\r\n          <text x=\"8\" y=\"1.8\" text-anchor=\"middle\" font-size=\"2\" fill=\"#3F51B5\" font-weight=\"bold\">P</text>\r\n        </g>\r\n      </svg>\r\n    `;\r\n  }\r\n};\r\n\r\n// Create custom Leaflet icon for devices - emphasizing device type over status\r\nexport const createCustomDeviceIcon = (type, status = 'online', size = 32) => {\r\n  const iconSvg = DeviceIcons[type] ? DeviceIcons[type](status, size - 8) : DeviceIcons.CCTV(status, size - 8);\r\n  \r\n  return L.divIcon({\r\n    html: `<div style=\"position: relative; width: ${size}px; height: ${size}px; filter: drop-shadow(0 2px 4px rgba(0,0,0,0.3));\">\r\n      ${iconSvg}\r\n    </div>`,\r\n    className: 'custom-device-icon',\r\n    iconSize: [size, size],\r\n    iconAnchor: [size / 2, size / 2],\r\n  });\r\n};\r\n\r\n// Edge Node Icon with enhanced design\r\nexport const createEdgeNodeIcon = (size = 40) => {\r\n  return L.divIcon({\r\n    html: `\r\n      <div style=\"position: relative; width: ${size}px; height: ${size}px;\">\r\n        <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 40 40\" fill=\"none\">\r\n          <defs>\r\n            <linearGradient id=\"edgeGrad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n              <stop offset=\"0%\" style=\"stop-color:#667eea\"/>\r\n              <stop offset=\"100%\" style=\"stop-color:#764ba2\"/>\r\n            </linearGradient>\r\n          </defs>\r\n          <rect x=\"2\" y=\"2\" width=\"36\" height=\"36\" rx=\"6\" fill=\"url(#edgeGrad)\" stroke=\"white\" stroke-width=\"2\"/>\r\n          <g transform=\"translate(10, 8)\">\r\n            <rect x=\"0\" y=\"4\" width=\"20\" height=\"12\" rx=\"2\" fill=\"white\"/>\r\n            <rect x=\"2\" y=\"6\" width=\"5\" height=\"2\" fill=\"#667eea\"/>\r\n            <rect x=\"2\" y=\"9\" width=\"8\" height=\"2\" fill=\"#667eea\"/>\r\n            <rect x=\"2\" y=\"12\" width=\"6\" height=\"2\" fill=\"#667eea\"/>\r\n            <circle cx=\"15\" cy=\"10\" r=\"3\" fill=\"white\" stroke=\"#667eea\" stroke-width=\"2\"/>\r\n            <circle cx=\"15\" cy=\"10\" r=\"1\" fill=\"#667eea\"/>\r\n          </g>\r\n          <g transform=\"translate(8, 22)\">\r\n            <rect x=\"0\" y=\"0\" width=\"6\" height=\"6\" rx=\"1\" fill=\"white\" opacity=\"0.8\"/>\r\n            <rect x=\"8\" y=\"0\" width=\"6\" height=\"6\" rx=\"1\" fill=\"white\" opacity=\"0.8\"/>\r\n            <rect x=\"16\" y=\"0\" width=\"6\" height=\"6\" rx=\"1\" fill=\"white\" opacity=\"0.8\"/>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    `,\r\n    className: 'edge-node-icon',\r\n    iconSize: [size, size],\r\n    iconAnchor: [size / 2, size / 2],\r\n  });\r\n};\r\n\r\n// Alert Icon with pulsing animation\r\nexport const createAlertIcon = (severity, size = 32) => {\r\n  const colors = {\r\n    high: '#F44336',\r\n    medium: '#FF9800',\r\n    low: '#FFC107'\r\n  };\r\n\r\n  const color = colors[severity] || colors.medium;\r\n\r\n  return L.divIcon({\r\n    html: `\r\n      <div style=\"position: relative; width: ${size}px; height: ${size}px;\">\r\n        <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 32 32\" fill=\"none\">\r\n          <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"${color}\" stroke=\"white\" stroke-width=\"3\"/>\r\n          <g transform=\"translate(11, 8)\">\r\n            <path d=\"M5 0 L9 7 L1 7 Z\" fill=\"white\"/>\r\n            <circle cx=\"5\" cy=\"10\" r=\"1\" fill=\"white\"/>\r\n            <rect x=\"4.2\" y=\"3\" width=\"1.6\" height=\"4\" fill=\"${color}\"/>\r\n          </g>\r\n        </svg>\r\n        <style>\r\n          .alert-pulse-${severity} {\r\n            animation: alertPulse 2s infinite;\r\n          }\r\n          @keyframes alertPulse {\r\n            0% { transform: scale(1); opacity: 1; }\r\n            50% { transform: scale(1.15); opacity: 0.7; }\r\n            100% { transform: scale(1); opacity: 1; }\r\n          }\r\n        </style>\r\n      </div>\r\n    `,\r\n    className: `alert-icon alert-pulse-${severity}`,\r\n    iconSize: [size, size],\r\n    iconAnchor: [size / 2, size / 2],\r\n  });\r\n};\r\n\r\nexport default DeviceIcons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}